name: Linux - libMesh-1.5.1

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on: 
  # trigger on pushes to develop or main
  push:
    #branches: 
    #  - main
    #  - master
    #  - develop
    paths-ignore:
      - "*.md"
      - "*.rst"

  # trigger on pull request to main or develop
  pull_request:
    branches:
      - develop
      - main
      - master
    paths-ignore:
      - "*.md"
      - "*.rst"

  # trigger manually from GitHub Actions tab
  workflow_dispatch:

jobs:
  build_libmesh:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      # Print out some useful diagnostic info about the job/environment.
      - name: Diagnostic info
        run: |
          echo "=============================================================";
          echo "Run #${GITHUB_RUN_NUMBER}";
          echo "Run ID: ${GITHUB_RUN_ID}";
          echo "Testing: ${GITHUB_REPOSITORY}";
          echo "Triggered by: ${GITHUB_EVENT_NAME}";
          echo "Initiated by: ${GITHUB_ACTOR}";

      # Update packages fromt apt repos.
      - name: Install APT dependencies
        run: |
          sudo apt-get update
          sudo apt-get -qq install -y \
            build-essential gfortran wget less m4 git cmake \
            python3-all python3-all-dev python3-all-dbg \
            openmpi-bin libopenmpi-dev python3-mpi4py python3-mpi4py-dbg \
            petsc-dev python3-petsc4py \
            slepc-dev python3-slepc4py \
            libparpack2-dev \
            libmetis-dev \
            libnetcdf-dev \
            libboost-all-dev \
            libeigen3-dev \
            libnlopt-dev \
            libadolc-dev \
            doxygen graphviz rsync \
      #       texlive-latex-base dvi2ps ghostscript \
      #       python3.7 python3.7-dev libpython3.7

      - name: Setup environment
        run: |
          export NP=2
          mkdir ${GITHUB_WORKSPACE}/work

      # Fetch/configure libMesh.
      # Note we currently have to use a modified version of the release with some updates to the libMesh
      # build to allow for a non-provided, non-PETSc version of metis provided by the Ubuntu repositories.
      - name: Fetch/configure libMesh
        timeout-minutes: 10
        run: |
          cd ${GITHUB_WORKSPACE}/work
          git clone -b v1.5.1_with_build_updates --single-branch https://github.com/jdeaton/libmesh.git
          cd libmesh
          mkdir build
          cd build
          export PETSC_DIR=/usr/lib/petsc
          export SLEPC_DIR=/usr/lib/slepc
          ../configure --quiet --prefix=/usr/local --with-methods="opt devel dbg" --enable-cxx11-required --disable-metaphysicl --disable-examples --enable-triangle=yes --enable-tetgen=yes --disable-strict-lgpl --with-metis=/usr/lib/x86_64-linux-gnu --with-metis-include=/usr/include --with-nlopt-include=/usr/include --with-nlopt-lib=/usr/lib/x86_64-linux-gnu
      
      - name: Make libMesh
        timeout-minutes: 180
        run: |
          cd ${GITHUB_WORKSPACE}/work/libmesh/build
          make -j 1
          sudo make install  

      - name: Package libMesh
        run: |
          # Organize libMesh include/ and lib/ for packaging.
          export PKG_DIR=${GITHUB_WORKSPACE}/libmesh-1.5.1-1
          export INST_DIR=${PKG_DIR}/usr/local
          mkdir ${PKG_DIR}
          mkdir ${PKG_DIR}/usr
          mkdir ${PKG_DIR}/usr/local
          mkdir ${PKG_DIR}/usr/local/include
          mkdir ${PKG_DIR}/usr/local/lib
          cp -r /usr/local/include/* ${INST_DIR}/include
          cp -r /usr/local/lib/libmesh* ${INST_DIR}/lib
          cp -r /usr/local/lib/libnetcdf* ${INST_DIR}/lib

          # Copy in DEBIAN/control package configuration file.
          cp -r ${GITHUB_WORKSPACE}/libmesh/ubuntu20.04_focal/libmesh_v1.5.1/DEBIAN ${PKG_DIR}

          # Create libMesh .deb package.
          dpkg-deb --build libmesh-1.5.1-1

      - name: Upload libMesh package artifact
        uses: actions/upload-artifact@v2
        with:
          name: libmesh-1.5.1-ubuntu20.04
          path: libmesh-1.5.1-1.deb